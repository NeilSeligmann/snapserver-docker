# Install SnapClient on minimal OS
FROM alpine:latest

MAINTAINER Saiyato
ARG TOKEN

RUN apk -U add git bash build-base asio-dev avahi-dev flac-dev libvorbis-dev alsa-lib-dev opus-dev soxr-dev cmake \
 && cd /root \
 && git clone --recursive https://github.com/badaix/snapcast.git \
 && cd snapcast/server \
 && make \
 && cp snapserver /usr/local/bin \
 && cd /root \
 && git clone https://github.com/badaix/snapweb \
 && mkdir -p /var/www/html \
 && cp snapweb/page/* /var/www/html \
 && wget -O /etc/snapserver.conf https://raw.githubusercontent.com/Saiyato/snapserver_docker/master/snapserver/snapserver.conf \
 && cd / \
 && apk --purge del git build-base asio-dev avahi-dev flac-dev libvorbis-dev alsa-lib-dev opus-dev soxr-dev cmake \
 && apk add avahi-libs flac libvorbis opus soxr alsa-lib \
 && rm -rf /etc/ssl /var/cache/apk/* /lib/apk/db/* /root/snapcast /root/snapweb
 
# Scan container using microscanner by Aqua Security
RUN apk add --no-cache ca-certificates && update-ca-certificates && \
    wget -O /microscanner https://get.aquasec.com/microscanner && \
    chmod +x /microscanner && \
    echo "Scanning for vulnerabilities..." && \
    /microscanner $TOKEN && \
    echo "No vulnerabilities found!" && \
    rm -rf /microscanner && \
    apk --purge del ca-certificates

EXPOSE 1704
EXPOSE 1705
EXPOSE 1780

ENTRYPOINT ["snapserver"]
